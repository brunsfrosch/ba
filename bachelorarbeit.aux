\relax 
\providecommand\hyper@newdestlabel[2]{}
\catcode `"\active 
\bibstyle{unsrt}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@input{titelseite.aux}
\select@language{ngerman}
\@writefile{toc}{\select@language{ngerman}}
\@writefile{lof}{\select@language{ngerman}}
\@writefile{lot}{\select@language{ngerman}}
\select@language{ngerman}
\@writefile{toc}{\select@language{ngerman}}
\@writefile{lof}{\select@language{ngerman}}
\@writefile{lot}{\select@language{ngerman}}
\citation{bellTextCompression}
\citation{klappentelegraph}
\citation{braille}
\@writefile{toc}{\contentsline {section}{\numberline {1}Einleitung}{4}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Anekdote}{4}{subsection.1.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Links sieht man einen Klappentelegraphen. Rechts das englische Braille-Alphabet. \relax }}{5}{figure.caption.2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:braille}{{1}{5}{Links sieht man einen Klappentelegraphen. Rechts das englische Braille-Alphabet. \relax }{figure.caption.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Theoretische Grundlagen}{5}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Operationen auf Strings}{5}{subsection.2.1}}
\@writefile{thm}{\contentsline {definition}{{Definition}{2.{1}}{Länge}}{5}{theorem.2.1}}
\@writefile{thm}{\contentsline {definition}{{Definition}{2.{2}}{Leerstring}}{5}{theorem.2.2}}
\@writefile{thm}{\contentsline {definition}{{Definition}{2.{3}}{Symbolzugriff}}{5}{theorem.2.3}}
\@writefile{thm}{\contentsline {definition}{{Definition}{2.{4}}{Teilstring}}{5}{theorem.2.4}}
\@writefile{thm}{\contentsline {definition}{{Definition}{2.{5}}{Suffix}}{5}{theorem.2.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Suffix-Tree}{5}{subsection.2.2}}
\@writefile{thm}{\contentsline {definition}{{Definition}{2.{6}}{Suffix-Tree}}{5}{theorem.2.6}}
\citation{suffixtreeurl}
\citation{lempelziv78}
\citation{bellTextCompression}
\@writefile{thm}{\contentsline {beispiel}{{Beispiel}{2.{7}}{Suffix-Tree}}{6}{theorem.2.7}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Diese Abbildung zeigt den Suffix-Tree zu $s$ = \texttt  {ananas\$}. Die Bl\IeC {\"a}tter sind hierbei nummeriert. Der String auf dem Pfad von der Wurzel zum Blatt $i$ repr\IeC {\"a}sentiert das Suffix $s[i..]$. Die roten Zahlen an den Knoten sind durch eine Pre-Order-Nummerierung entstanden. Im Folgenden nennen wir diese roten Zahlen IDs, da wir einen Knoten an seiner ID eindeutig identifizieren k\IeC {\"o}nnen. \relax }}{6}{figure.caption.3}}
\newlabel{fig:suffixTree}{{2}{6}{Diese Abbildung zeigt den Suffix-Tree zu $s$ = \texttt {ananas\$}. Die Blätter sind hierbei nummeriert. Der String auf dem Pfad von der Wurzel zum Blatt $i$ repräsentiert das Suffix $s[i..]$. Die roten Zahlen an den Knoten sind durch eine Pre-Order-Nummerierung entstanden. Im Folgenden nennen wir diese roten Zahlen IDs, da wir einen Knoten an seiner ID eindeutig identifizieren können. \relax }{figure.caption.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Idee der LZ78 Variante}{6}{section.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}LZ78}{6}{subsection.3.1}}
\newlabel{lz78_sec}{{3.1}{6}{LZ78}{subsection.3.1}{}}
\citation{cics}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Links sieht man die Faktorisierung nach LZ78 und rechts den entsprechenden LZ78-Tree. Der $i$-te Faktor $(x,s)$ wird zu einem neuen Knoten $i$ mit $x$ als Elternknoten und die Kante $(x,i)$ wird mit $s$ beschriftet. Die Wurzel des Baumes beschriften wir mit '-', da sie keinen Faktor darstellt. Ein Faktor (-,s) ist somit ein Kindknoten der Wurzel.\relax }}{7}{figure.caption.4}}
\newlabel{fig:lz78}{{3}{7}{Links sieht man die Faktorisierung nach LZ78 und rechts den entsprechenden LZ78-Tree. Der $i$-te Faktor $(x,s)$ wird zu einem neuen Knoten $i$ mit $x$ als Elternknoten und die Kante $(x,i)$ wird mit $s$ beschriftet. Die Wurzel des Baumes beschriften wir mit '-', da sie keinen Faktor darstellt. Ein Faktor (-,s) ist somit ein Kindknoten der Wurzel.\relax }{figure.caption.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}LZ78 Variante}{7}{subsection.3.2}}
\newlabel{LZ78 Variante}{{3.2}{7}{LZ78 Variante}{subsection.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Links sieht man die Faktorisierung nach LZ78V und rechts den entsprechenden LZ78V-Tree. Der $i$-te Faktor $(x,s)$ wird zu einem neuen Knoten $i$ mit $x$ als Elternknoten und die Kante $(x,i)$ wird mit $s$ beschriftet. Im Gegensatz zum LZ78-Tree kann $s$ aber mehr als ein Zeichen beinhalten.\relax }}{8}{figure.caption.5}}
\newlabel{fig:lz78v}{{4}{8}{Links sieht man die Faktorisierung nach LZ78V und rechts den entsprechenden LZ78V-Tree. Der $i$-te Faktor $(x,s)$ wird zu einem neuen Knoten $i$ mit $x$ als Elternknoten und die Kante $(x,i)$ wird mit $s$ beschriftet. Im Gegensatz zum LZ78-Tree kann $s$ aber mehr als ein Zeichen beinhalten.\relax }{figure.caption.5}{}}
\citation{sdsl}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Diese Abbildung zeigt den Suffix-Tree zu $s$ = \texttt  {kananas\$}. Die Bl\IeC {\"a}tter sind hierbei nummeriert. Der String auf dem Pfad von der Wurzel zum Blatt $i$ repr\IeC {\"a}sentiert das Suffix $s[i..]$. Die roten Zahlen an den Knoten sind durch eine Pre-Order-Nummerierung entstanden und sind die IDs der Knoten.\relax }}{9}{figure.caption.6}}
\newlabel{fig:kananas}{{5}{9}{Diese Abbildung zeigt den Suffix-Tree zu $s$ = \texttt {kananas\$}. Die Blätter sind hierbei nummeriert. Der String auf dem Pfad von der Wurzel zum Blatt $i$ repräsentiert das Suffix $s[i..]$. Die roten Zahlen an den Knoten sind durch eine Pre-Order-Nummerierung entstanden und sind die IDs der Knoten.\relax }{figure.caption.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Faktorisierung mit LZ78V}{9}{section.4}}
\newlabel{factorisation}{{4}{9}{Faktorisierung mit LZ78V}{section.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}SDSL-lite}{9}{subsection.4.1}}
\citation{sdsl}
\citation{sdsl}
\newlabel{line:child}{{5}{10}{SDSL-lite}{AlgoLine.1.5}{}}
\newlabel{line:used}{{6}{10}{SDSL-lite}{AlgoLine.1.6}{}}
\newlabel{line:onlyFirstSym}{{9}{10}{SDSL-lite}{AlgoLine.1.9}{}}
\newlabel{line:textpos}{{12}{10}{SDSL-lite}{AlgoLine.1.12}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces LZ78V Faktorisierung mit Vektoren\relax }}{10}{algocf.1}}
\newlabel{algo:factVec}{{1}{10}{SDSL-lite}{algocf.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Suffix-Tree Konstruktion}{10}{subsection.4.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Vektoren zur Faktorisierung}{10}{subsection.4.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.3.1}Bit-Vektor used}{10}{subsubsection.4.3.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.3.2}Int-Vektor factors}{10}{subsubsection.4.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Abbruchbedingung der Faktorisierung}{11}{subsection.4.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Faktoren erstellen}{11}{subsection.4.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6}Beispiel}{11}{subsection.4.6}}
\newlabel{example:fact}{{4.6}{11}{Beispiel}{subsection.4.6}{}}
\citation{munroTables}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.7}rank-Struktur auf used}{12}{subsection.4.7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8}Int-Vektor N}{12}{subsection.4.8}}
\newlabel{algo:lz78v-tree}{{\caption@xref {algo:lz78v-tree}{ on input line 403}}{13}{Beispiel}{algocf.caption.8}{}}
\newlabel{line:nFilled}{{4}{13}{Beispiel}{AlgoLine.2.4}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces LZ78V-Tree\relax }}{13}{algocf.2}}
\newlabel{algo:lz78v-tree}{{2}{13}{Beispiel}{algocf.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.9}F\IeC {\"u}llen von $A_1$ und $A_2$}{13}{subsection.4.9}}
\@writefile{thm}{\contentsline {beweis}{{Beweis}{1}{}}{13}{beweis.1}}
\citation{dataCompressionHeld}
\citation{managingGigabytes}
\citation{managingGigabytes}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.9.1}Beispiel}{14}{subsubsection.4.9.1}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Kodierung}{14}{section.5}}
\newlabel{encode}{{5}{14}{Kodierung}{section.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Kanonische Huffman Kodierung}{14}{subsection.5.1}}
\citation{storerDataCompression}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Berechne Code-L\IeC {\"a}ngen der Symbole \cite  [S. 341]{managingGigabytes}\relax }}{15}{algocf.3}}
\newlabel{algo:huf-codeLength}{{3}{15}{Kanonische Huffman Kodierung}{algocf.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.1}Huffman-Tree}{15}{subsubsection.5.1.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Huffman-Tree zu $s$ = \texttt  {0|a|0|na|2|s|0|\$|}. Die Bl\IeC {\"a}tter enthalten die Symbole. Darunter sehen wir die H\IeC {\"a}ufigkeiten der Symbole. Die restlichen Knoten sind jeweils mit der Summe der H\IeC {\"a}ufigkeiten in den entsprechenden Teilb\IeC {\"a}umen markiert.\relax }}{16}{figure.caption.10}}
\newlabel{fig:huffman_tree}{{6}{16}{Huffman-Tree zu $s$ = \texttt {0|a|0|na|2|s|0|\$|}. Die Blätter enthalten die Symbole. Darunter sehen wir die Häufigkeiten der Symbole. Die restlichen Knoten sind jeweils mit der Summe der Häufigkeiten in den entsprechenden Teilbäumen markiert.\relax }{figure.caption.10}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.2}Min-Heap}{16}{subsubsection.5.1.2}}
\newlabel{min-heap}{{5.1.2}{16}{Min-Heap}{subsubsection.5.1.2}{}}
\@writefile{thm}{\contentsline {definition}{{Definition}{5.{1}}{Heap-Eigenschaft}}{16}{theorem.5.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Beispiel eines \textit  {Min-Heaps} $(\mathbb  {N}, \geq )$.\relax }}{16}{figure.caption.11}}
\newlabel{fig:min_heap_example}{{7}{16}{Beispiel eines \textit {Min-Heaps} $(\mathbb {N}, \geq )$.\relax }{figure.caption.11}{}}
\citation{introductionToAlgorithms}
\newlabel{heap_array_prop_1}{{5.1.2}{17}{Min-Heap}{figure.caption.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Array-Darstellung des Baums aus Abbildung \ref  {fig:min_heap_example}.\relax }}{17}{figure.caption.12}}
\newlabel{fig:array_heap}{{8}{17}{Array-Darstellung des Baums aus Abbildung \ref {fig:min_heap_example}.\relax }{figure.caption.12}{}}
\citation{managingGigabytes}
\citation{managingGigabytes}
\citation{managingGigabytes}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Hier sehen wir die Array-Darstellung des Min-Heaps aus dem Beispiel. Bis zu der gestrichelten Trennlinie geh\IeC {\"o}ren die Eintr\IeC {\"a}ge zum Min-Heap. Die Pfeile verdeutlichen die Zeiger auf die Werte der zweiten H\IeC {\"a}lfte.\relax }}{18}{figure.caption.13}}
\newlabel{A_heap}{{9}{18}{Hier sehen wir die Array-Darstellung des Min-Heaps aus dem Beispiel. Bis zu der gestrichelten Trennlinie gehören die Einträge zum Min-Heap. Die Pfeile verdeutlichen die Zeiger auf die Werte der zweiten Hälfte.\relax }{figure.caption.13}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Diese Abbildung zeigt beispielhaft das Array $A$ in der Baumdarstellung vor und nachdem wir aus der ersten H\IeC {\"a}fte ein Min-Heap konstruiert haben. Die roten Zahlen sind aus der ersten H\IeC {\"a}fte, die schwarzen aus der zweiten H\IeC {\"a}lfte von $A$.\relax }}{18}{figure.caption.14}}
\newlabel{fig:buildHeap}{{10}{18}{Diese Abbildung zeigt beispielhaft das Array $A$ in der Baumdarstellung vor und nachdem wir aus der ersten Häfte ein Min-Heap konstruiert haben. Die roten Zahlen sind aus der ersten Häfte, die schwarzen aus der zweiten Hälfte von $A$.\relax }{figure.caption.14}{}}
\citation{managingGigabytes}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Diese Abbildung zeigt die erste Iteration von Phase zwei des Algorithmus \ref  {algo:huf-codeLength}. Links sehen wir die Array-Darstellung und rechts die Baumdarstellung der Heap-Struktur. An den Pfeilen sehen wir die Operationen, die in den \IeC {\"U}berg\IeC {\"a}ngen passieren. \relax }}{19}{figure.caption.15}}
\newlabel{fig:A_heap_ilus}{{11}{19}{Diese Abbildung zeigt die erste Iteration von Phase zwei des Algorithmus \ref {algo:huf-codeLength}. Links sehen wir die Array-Darstellung und rechts die Baumdarstellung der Heap-Struktur. An den Pfeilen sehen wir die Operationen, die in den Übergängen passieren. \relax }{figure.caption.15}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Symbolen einen kanonischen Huffman Code zuweisen \cite  [S. 338]{managingGigabytes}\relax }}{20}{algocf.4}}
\newlabel{algo:huf-assignCode}{{4}{20}{Min-Heap}{algocf.4}{}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Diese Tabelle zeigt beispielhaft $codeword$ zum Ergebnisstring $s$ = \texttt  {0|a|0|na|2|s|0|\$|}. Die Werte in $codeword$ sind Codes in Dezimaldarstellung. Der Code von Symbol $i$ ergibt sich aus den $l_i$ rechten Bits von $codeword[i]$ \relax }}{20}{table.caption.17}}
\citation{managingGigabytes}
\@writefile{toc}{\contentsline {section}{\numberline {6}Dekodierung}{21}{section.6}}
\newlabel{decode}{{6}{21}{Dekodierung}{section.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Diese Tabelle zeigt am Beispiel aus Kapitel \ref  {encode} die Informationen, die in $C_1$ enthalten sind. \relax }}{21}{table.caption.18}}
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Dekodieren von $C_1C_2$ \cite  [S. 339]{managingGigabytes}\relax }}{21}{algocf.5}}
\newlabel{algo:decode}{{5}{21}{Dekodierung}{algocf.5}{}}
\citation{managingGigabytes}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Hier sehen wir die Tabelle $symbol\_table$ am Beispiel aus Kapitel \ref  {encode}. \relax }}{22}{table.caption.20}}
\newlabel{my-label}{{\caption@xref {my-label}{ on input line 809}}{22}{Dekodierung}{table.caption.21}{}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Diese Tabelle zeigt alle Pr\IeC {\"a}fixe der Codes aus Kapitel \ref  {encode}. Hier erkennen wir, dass alle $k$-Pr\IeC {\"a}fixe von Codes, die l\IeC {\"a}nger sind als $k$, kleiner sind als $firstcode[k]$.\relax }}{22}{table.caption.21}}
\newlabel{pr\IeC {\"a}fix_table}{{4}{22}{Diese Tabelle zeigt alle Präfixe der Codes aus Kapitel \ref {encode}. Hier erkennen wir, dass alle $k$-Präfixe von Codes, die länger sind als $k$, kleiner sind als $firstcode[k]$.\relax }{table.caption.21}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Dekomprimierung}{23}{section.7}}
\newlabel{decomp}{{7}{23}{Dekomprimierung}{section.7}{}}
\citation{sdsl}
\citation{sdsl}
\@writefile{toc}{\contentsline {section}{\numberline {8}Implementierung}{24}{section.8}}
\newlabel{impl}{{8}{24}{Implementierung}{section.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1}Faktorisierung}{24}{subsection.8.1}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Diese Tabelle zeigt die verschiedenen Implementierungen eines Suffix-Trees in SDSL und ihren Speicherbedarf. $n$ ist hierbei die L\IeC {\"a}nge des Textes. \relax }}{24}{table.caption.23}}
\newlabel{footnote:sdsl}{{1}{24}{}{Hfootnote.1}{}}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces Diese Tabelle zeigt die verschiedenen Implementierungen einer rank-Struktur in SDSL und ihren Speicherbedarf. $n$ ist hierbei die L\IeC {\"a}nge des Vektors. \relax }}{25}{table.caption.24}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.2}Kodierung/Dekodierung}{25}{subsection.8.2}}
\@writefile{toc}{\contentsline {section}{\numberline {9}Praktische Tests}{25}{section.9}}
\newlabel{tests}{{9}{25}{Praktische Tests}{section.9}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.1}Suffix-Trees}{26}{subsection.9.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.1.1}Testumgebung}{26}{subsubsection.9.1.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.1.2}Durchf\IeC {\"u}hrung}{26}{subsubsection.9.1.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.1.3}Ergebnisse}{26}{subsubsection.9.1.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.1.4}Auswertung}{26}{subsubsection.9.1.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Links sehen wir das Diagramm f\IeC {\"u}r den Test mit \textit  {cst\_sct3} und rechts mit \textit  {cst\_sada}.  Eingabe: 1MB DNA-Sequenz\relax }}{27}{figure.caption.25}}
\newlabel{fig:suffix_trees_test_dna}{{12}{27}{Links sehen wir das Diagramm für den Test mit \textit {cst\_sct3} und rechts mit \textit {cst\_sada}.\\ Eingabe: 1MB DNA-Sequenz\relax }{figure.caption.25}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Links sehen wir das Diagramm f\IeC {\"u}r den Test mit \textit  {cst\_sct3} und rechts mit \textit  {cst\_sada}.  Eingabe: 1MB Englischer Text\relax }}{27}{figure.caption.26}}
\newlabel{fig:suffix_trees_test_english}{{13}{27}{Links sehen wir das Diagramm für den Test mit \textit {cst\_sct3} und rechts mit \textit {cst\_sada}.\\ Eingabe: 1MB Englischer Text\relax }{figure.caption.26}{}}
\bibdata{bibAngaben}
\bibcite{bellTextCompression}{1}
\bibcite{klappentelegraph}{2}
\bibcite{braille}{3}
\bibcite{suffixtreeurl}{4}
\bibcite{lempelziv78}{5}
\bibcite{cics}{6}
\bibcite{sdsl}{7}
\bibcite{munroTables}{8}
\bibcite{dataCompressionHeld}{9}
\bibcite{managingGigabytes}{10}
\bibcite{storerDataCompression}{11}
\bibcite{introductionToAlgorithms}{12}
